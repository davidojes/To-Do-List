@page
@using Microsoft.AspNetCore.Identity

@model ToDoList.HomeModel
@inject UserManager<ApplicationUser> UserManager
@using ToDoList.Models;

@using Controllers;
@using Microsoft.AspNetCore.Hosting;
@using ToDoList.Data;
@using Services;
@using Repositories;

@{
  //ViewData["Header"] = @UserManager.GetUserName(User) + "'s to-do list";
  var user = await UserManager.GetUserAsync(User);
  ViewData["Header"] = user.DisplayName + "'s to-do list";
  ViewData["Title"] = "Home";

  var taskClass = "";
  var isTicked = "";
}

<div class="list-container-wrapper">
  <div class="list-container">
    <div class="task-list-header">
      <h2>Tasks</h2>
      <h4>Click a task to edit it</h4>
    </div>
    <!-- ul to display to do list -->
    <ul id="taskList" class="task-list">
      @foreach (var item in Model.ToDoListItems)
      {
        if (item.IsCompleted) { taskClass = "completed-task"; isTicked = "isTicked"; }
        else { taskClass = ""; isTicked = ""; }

        @* checks if the primary key of the current list item matches the currently logged in user *@
        if (item.UserEmail.Equals(UserManager.GetUserName(User)))
        {
          <li>
            <div class="list-item-container">
              <div class="checkbox-container">
                <input type="checkbox" class="@isTicked checkbox" />
                <!-- task list item -->
              </div>
              <div class="@taskClass taskListItem">
                @Html.DisplayFor(modelItem => item.Description)
              </div>

              <!-- delete button -->
              <form class="delete-form" method="post" asp-page-handler="delete" asp-route-id="@item.Id">
                <input type="hidden" asp-for="toDoListItem.Id" />
                <input type="submit" class="delete-link button-hover" />
              </form>
            </div>

            <!-- edit form -->
            <div class="edit-div">
              <form method="post" asp-page-handler="edit" asp-route-id="@item.Id" class="edit-bar">
                <div asp-validation-summary="ModelOnly"></div>
                <input type="hidden" value="@item.Id" asp-for="toDoListItem.Id" />
                <div>
                  <input asp-for="toDoListItem.UserEmail" value="@UserManager.GetUserName(User)" hidden />
                </div>
                <div class="checkbox-container">
                  <input type="checkbox" class="@isTicked checkbox" />
                </div>

                <input type="checkbox" class="@isTicked hidden-checkbox" asp-for="toDoListItem.IsCompleted" />
                <!-- task list item -->
                <div class="taskListItem">
                  <textarea spellcheck="false" type="text" class="edit-input-area" asp-for="toDoListItem.Description"></textarea>
                </div>
                <span asp-validation-for="toDoListItem.Description"></span>
                <!-- save button -->
                <input type="submit" value="Save" class="save-button button-hover" />
              </form>
              <form class="delete-form" method="post" asp-page-handler="delete" asp-route-id="@item.Id">
                <input type="hidden" asp-for="toDoListItem.Id" />
                <input type="submit" class="delete-link button-hover" />
              </form>
            </div>
          </li>

        }
      }
    </ul>
    <br />

    <!-- add task bar -->
    <div class="task-list-inputbar">
      <form class="add-task-form" method="post">
        <div asp-validation-summary="ModelOnly"></div>
        <div>
          <!-- concern that there may be browser vulnerabilities (being able to change useremail value) -->
          <input asp-for="toDoListItem.UserEmail" value="@UserManager.GetUserName(User)" placeholder="User Email" hidden />
          <span asp-validation-for="toDoListItem.UserEmail"></span>
        </div>
        <!-- input box for entering task description -->
        <div>
          <input asp-for="toDoListItem.Description" id="inputBox" class="input-box" placeholder="Enter Task" required />
          <!-- add task button -->
          <input id="addTaskButton" type="button" value="Add" class="addtask-button button-hover" />
          <span asp-validation-for="toDoListItem.Description"></span>
        </div>
      </form>
      <!-- end of input bar -->
    </div>
  </div>
  <br />

  <!-- logout button -->
  <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/Index", new { area = "" })">
    <button id="logout" class="logout-button button-hover" type="submit">Logout</button>
  </form>
</div>

<script>

</script>



