@page
@using Microsoft.AspNetCore.Identity

@model ToDoList.HomeModel
@inject UserManager<IdentityUser> UserManager

@using Controllers;
@using Microsoft.AspNetCore.Hosting;
@using ToDoList.Data;
@using Services;
@using Repositories;

@{
  ViewData["Header"] = "- " + @UserManager.GetUserName(User) + "'s to-do list";
  ViewData["Title"] = "Home";

  var taskClass = "";
  var isTicked = "";
}

<div class="list-container-wrapper">
  <div class="list-container">
    <div class="task-list-header">
      <h2>Tasks</h2>
      <h4>Click a task to complete it</h4>
    </div>
    <!-- ul to display to do list -->
    <ul id="taskList" class="task-list">
      @foreach (var item in Model.ToDoListItems)
      {
        if (item.IsCompeleted) { taskClass = "completed-task"; isTicked = "isTicked"; }
        else { taskClass = ""; isTicked = ""; }

        @* checks if the primary key of the current list item matches the currently logged in user *@
        if (item.UserEmail.Equals(UserManager.GetUserName(User)))
        {
          <li>
            <span class="checkbox-container">
              <input type="checkbox" class="@isTicked checkbox" />
              <!-- task list item -->
              <span class="@taskClass taskListItem">@Html.DisplayFor(modelItem => item.Description)</span>
            </span>
            <!-- edit button -->
            <button class="edit-button button-hover">Edit</button>
            <!-- delete button -->
            <form class="delete-form" method="post" asp-page-handler="delete" asp-route-id="@item.Id">
              <input type="hidden" asp-for="toDoListItem.Id" />
              <input type="submit" class="delete-link button-hover" />
            </form>

            <!-- edit form -->
            <form method="post" asp-page-handler="edit" asp-route-id="@item.Id" class="edit-bar">
              <div asp-validation-summary="ModelOnly"></div>
              <input type="hidden" value="@item.Id" asp-for="toDoListItem.Id" />
              <div>
                <input asp-for="toDoListItem.UserEmail" value="@UserManager.GetUserName(User)" hidden />
                <span asp-validation-for="toDoListItem.UserEmail"></span>
              </div>
              <div>
                <input class="@isTicked checkbox" asp-for="toDoListItem.IsCompeleted" />
                <input asp-for="toDoListItem.Description" value="@item.Description" />
                <span asp-validation-for="toDoListItem.Description"></span>
                <!-- save button -->
                <input type="submit" value="Save" class="save-button button-hover" />
              </div>
            </form>
          </li>

        }
      }
    </ul>
    <br />

    <!-- add task bar -->
    <div class="task-list-inputbar">
      <form method="post">
        <div asp-validation-summary="ModelOnly"></div>
        <div>
          <!-- concern that there may be browser vulnerabilities (being able to change useremail value) -->
          <input asp-for="toDoListItem.UserEmail" value="@UserManager.GetUserName(User)" placeholder="User Email" hidden />
          <span asp-validation-for="toDoListItem.UserEmail"></span>
        </div>
        <!-- input box for entering task description -->
        <div>
          <input asp-for="toDoListItem.Description" id="inputBox" class="input-box" placeholder="Enter Task" />
          <!-- add task button -->
          <input type="submit" value="Add" class="addtask-button button-hover" onclick="addTask()" />
          <span asp-validation-for="toDoListItem.Description"></span>
        </div>
      </form>
      <!-- end of input bar -->
    </div>
  </div>
  <br />

  <!-- logout button -->
  <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/Index", new { area = "" })">
    <button id="logout" class="logout-button button-hover" type="submit">Logout</button>
  </form>
</div>

<script>

</script>



